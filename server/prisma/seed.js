const { PrismaClient } = require("../src/generated/prisma");
const bcrypt = require("bcrypt");
const prisma = new PrismaClient();

async function main() {
  console.log("ðŸŒ± Báº¯t Ä‘áº§u seed dá»¯ liá»‡u...");

  // XÃ³a dá»¯ liá»‡u cÅ©
  await prisma.comment.deleteMany();
  await prisma.post.deleteMany();
  await prisma.user.deleteMany();

  // Hash máº­t kháº©u
  const password1 = await bcrypt.hash("123456", 10);
  const password2 = await bcrypt.hash("abcdef", 10);

  // ThÃªm user máº«u
  const user1 = await prisma.user.create({
    data: {
      name: "Nguyen Van A",
      email: "a@example.com",
      password: password1, // Ä‘Ã£ hash
      avatar: "https://i.pravatar.cc/150?u=a",
    },
  });

  const user2 = await prisma.user.create({
    data: {
      name: "Tran Thi B",
      email: "b@example.com",
      password: password2, // Ä‘Ã£ hash
      avatar: "https://i.pravatar.cc/150?u=b",
    },
  });

  // ThÃªm post máº«u
  const post1 = await prisma.post.create({
    data: {
      title: "BÃ i viáº¿t Ä‘áº§u tiÃªn",
      content: "Ná»™i dung bÃ i viáº¿t Ä‘áº§u tiÃªn...",
      authorId: user1.id,
    },
  });

  const post2 = await prisma.post.create({
    data: {
      title: "BÃ i viáº¿t thá»© hai",
      content: "Ná»™i dung bÃ i viáº¿t thá»© hai...",
      authorId: user2.id,
    },
  });

  // ThÃªm comment máº«u
  await prisma.comment.createMany({
    data: [
      {
        content: "BÃ¬nh luáº­n 1 cá»§a user 2 vÃ o post 1",
        authorId: user2.id,
        postId: post1.id,
      },
      {
        content: "BÃ¬nh luáº­n 2 cá»§a user 1 vÃ o post 2",
        authorId: user1.id,
        postId: post2.id,
      },
    ],
  });

  console.log("âœ… Seed dá»¯ liá»‡u thÃ nh cÃ´ng!");
}

main()
  .catch((e) => {
    console.error(e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
